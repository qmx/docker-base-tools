name: build

on:
  push:

jobs:
  build:
    name: build binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - "linux/amd64"
        tool:
          - cargo-bloat
          - cargo-bundle
          - cargo-docserver
          - cargo-edit
          - cargo-expand
          - cargo-release
          - cargo-tree
          - cargo-watch
          - cargo-web
          - cpubars
          #- diesel_cli
          - sccache
          - starship
          - wasm-pack
          - wk
          - zoxide

    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: prepare buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: v0.3.1

      - name: get the version
        id: container
        uses: qmx/ghaction-container-tag@master

      - name: login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: convert the arch
        id: sane_arch
        uses: qmx/ghaction-docker-arch@master
        with:
          docker_arch: "${{ matrix.target }}"

      - name: build
        run: docker buildx build --platform "${{ matrix.target }}" -t "qmxme/base-tools:${{ matrix.tool }}-${{ steps.sane_arch.outputs.arch }}-${{ steps.container.outputs.version }}" --load --build-arg "CRATE=${{ matrix.tool }}" .

      - name: extract binary
        shell: bash
        run: |
          id=$(docker create "qmxme/base-tools:${{ matrix.tool }}-${{ steps.sane_arch.outputs.arch }}-${{ steps.container.outputs.version }}")
          echo $id
          docker cp "$id:/opt/rust-tools/bin" dist

      - name: upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: "${{ matrix.tool }}-${{ steps.sane_arch.outputs.arch }}"
          path: "dist"

  package:
    name: package binaries
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v2-preview
        with:
          path: dist/

      - name: show binaries
        run : ls dist/
